{"version":3,"sources":["logo.svg","core/Entry.js","core/EntryCollection.js","core/Tools.js","core/Store.js","views/SidePanel/index.js","views/CentralDisplay/index.js","App.js","index.js"],"names":["module","exports","Entry","dateId","text","this","_dateId","_text","trim","t","DOMPurify","sanitize","Marked","MyEntryCollection","_collection","ImmortalDB","get","dateListIds","JSON","parse","i","length","setEntry","set","stringify","Object","keys","trimmedText","updateIndexImmortal","updateImmortalIndex","deleteEntry","detaId","remove","then","a","console","log","catch","err","Tools","options","date","Date","onlyDate","timezoneOffsetMin","getTimezoneOffset","offsetHours","parseInt","Math","abs","offsetMinutes","timezoneStandard","currentDate","getDate","currentMonth","getMonth","currentYear","getFullYear","currentHours","getHours","currentMinutes","getMinutes","currentSeconds","getSeconds","currentDatetime","day","getIso8601z","slice","today","delta","refDay","setDate","Store","Yetanotherstore","SidePanel","props","state","className","onChange","hideDrawer","React","Component","CentralDisplay","highlight","editionMode","_htmlDivRef","current","querySelectorAll","forEach","node","hljs","highlightBlock","onTextUpdate","ev","value","_editText","textSave","selectedDate","setState","goEdit","notification","info","message","description","placement","previousDay","evt","preventDefault","getDayRelativeTo","nextDay","handleEditorDidMount","_","editor","isEditorReady","createRef","document","addEventListener","key","on","entry","getEntry","textHtml","html","dateString","toDateString","dateTitleComp","isItToday","style","fontSize","marginLeft","color","dayDiff","dayDeltaFromToday","absDiff","dateDiffStr","header","align","span","textAlign","CaretLeftOutlined","onClick","CaretRightOutlined","displayDiv","buttonToShow","justify","type","language","theme","wordWrap","minimap","enabled","scrollbar","useShadows","renderLineHighlight","lineNumbersMinChars","autoClosingQuotes","editorDidMount","ref","dangerouslySetInnerHTML","__html","onDoubleClick","height","position","top","bottom","left","right","margin","width","border","padding","QuestionCircleOutlined","Header","Layout","Content","Footer","Sider","App","showDrawer","drawerVisible","backOnToday","logo","fontWeight","marginRight","footer","href","background","size","MenuOutlined","xs","sm","md","lg","xl","title","closable","onClose","visible","load","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.24858463.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import Marked from 'marked'\nimport DOMPurify from 'dompurify'\n\nclass Entry {\n  constructor(dateId, text) {\n    this._dateId = dateId\n    this._text = text.trim()\n  }\n\n  get dateId() {\n    return this._dateId\n  }\n\n  get text() {\n    return this._text\n  }\n\n  set text(t) {\n    this._text = t\n  }\n\n  get html() {\n    return DOMPurify.sanitize(Marked(this._text))\n  }\n}\n\nexport default Entry","import Entry from './Entry'\nimport { ImmortalDB } from 'immortal-db'\n\nconst TODAY_DATE_ID_LIST = 'today_dateIdList'\n\nclass EntryCollection {\n  constructor() {\n    this._collection = {}\n  }\n\n\n  /**\n   * Fetch data from ImmortalDB\n   */\n  async load() {\n    let dateListIds = await ImmortalDB.get(TODAY_DATE_ID_LIST, null)\n\n    if (dateListIds === null) {\n      return\n    }\n\n    // the list in ImmortalDB is a JSON string\n    dateListIds = JSON.parse(dateListIds)\n\n    for (let i = 0; i < dateListIds.length; i += 1) {\n      let dateId = dateListIds[i]\n      let text = await ImmortalDB.get(dateListIds[i])\n      this.setEntry(dateId, text)\n    }\n  }\n\n\n  async updateImmortalIndex() {\n    await ImmortalDB.set(TODAY_DATE_ID_LIST, JSON.stringify(Object.keys(this._collection)))\n  }\n\n\n  setEntry(dateId, text) {\n    const trimmedText = text.trim()\n\n    // we dont keep blank\n    if (trimmedText.length === 0) {\n      this.deleteEntry(dateId)\n      return\n    }\n\n    let updateIndexImmortal = false\n    // if the dateId was not in the collection, then we need to update the list of ids in immortalDB\n    if (!(dateId in this._collection)) {\n      updateIndexImmortal = true\n    }\n\n    this._collection[dateId] = new Entry(dateId, trimmedText)\n\n    // updating ImmortalDB\n    ImmortalDB.set(dateId, trimmedText)\n\n    if (updateIndexImmortal) {\n      this.updateImmortalIndex()\n    }\n  }\n\n\n  getEntry(dateId) {\n    if (dateId in this._collection) {\n      return this._collection[dateId]\n    } else {\n      return null\n    }\n  }\n\n\n  hasEntry(detaId) {\n    return detaId in this._collection\n  }\n\n\n  deleteEntry(dateId) {\n    if (dateId in this._collection) {\n      delete this._collection[dateId]\n      ImmortalDB.remove(dateId)\n      .then((a) => console.log(a))\n      .catch((err) => console.log('err', err))\n    }\n    this.updateImmortalIndex()\n  }\n}\n\nconst MyEntryCollection = new EntryCollection()\n\nexport default MyEntryCollection","class Tools {\n\n  static getIso8601z(options = {}) {\n    const date = 'date' in options ? options.date : new Date()\n    const onlyDate = 'onlyDate' in options ? options.onlyDate : false\n\n    // timezone part\n    const timezoneOffsetMin = date.getTimezoneOffset()\n    let offsetHours = parseInt(Math.abs(timezoneOffsetMin / 60))\n    let offsetMinutes = Math.abs(timezoneOffsetMin % 60)\n    let timezoneStandard = null\n  \n    if(offsetHours < 10) {\n      offsetHours = `0${offsetHours}`\n    }\n  \n    if(offsetMinutes < 10) {\n      offsetMinutes = `0${offsetMinutes}`\n    }\n  \n    // Add an opposite sign to the offset\n    // If offset is 0, it means timezone is UTC\n    if(timezoneOffsetMin < 0) {\n      timezoneStandard = `+${offsetHours}:${offsetMinutes}`\n    } else if(timezoneOffsetMin > 0) {\n      timezoneStandard = `-${offsetHours}:${offsetMinutes}`\n    } else if(timezoneOffsetMin === 0) {\n      timezoneStandard = 'Z'\n    }\n  \n    // date part\n    let currentDate = date.getDate()\n    let currentMonth = date.getMonth() + 1\n    let currentYear = date.getFullYear()\n    let currentHours = date.getHours()\n    let currentMinutes = date.getMinutes()\n    let currentSeconds = date.getSeconds()\n    let currentDatetime = null\n  \n    // Add 0 before date, month, hrs, mins or secs if they are less than 0\n    currentDate = currentDate < 10 ? `0${currentDate}` : currentDate;\n    currentMonth = currentMonth < 10 ? `0${currentMonth}` : currentMonth;\n    currentHours = currentHours < 10 ? `0${currentHours}` : currentHours;\n    currentMinutes = currentMinutes < 10 ? `0${currentMinutes}` : currentMinutes;\n    currentSeconds = currentSeconds < 10 ? `0${currentSeconds}` : currentSeconds;\n  \n    // Current datetime\n    // String such as 2016-07-16T19:20:30\n    currentDatetime = `${currentYear}-${currentMonth}-${currentDate}T${currentHours}:${currentMinutes}:${currentSeconds}`\n  \n    if (onlyDate) {\n      return `${currentYear}-${currentMonth}-${currentDate}`\n    }\n    \n    return `${currentDatetime}${timezoneStandard}`\n  }\n\n\n  static isItToday(day) {\n    let today = Tools.getIso8601z({onlyDate: true})\n    return today === day.slice(0, 10)\n  }\n\n\n  static dayDeltaFromToday(day) {\n    const today = new Date(Tools.getIso8601z({onlyDate: true}))\n    const theOtherDay = new Date(day)\n\n    let diff = (theOtherDay - today) / (1000 * 3600 * 24)\n    return diff\n  }\n\n\n  static getDayRelativeTo(day, delta) {\n    const refDay = new Date(day)\n    refDay.setDate(refDay.getDate() + delta)\n    return Tools.getIso8601z({date: refDay, onlyDate: true})\n  }\n}\n\nexport default Tools","import Yetanotherstore from 'yetanotherstore'\nimport Tools from './Tools'\n\nconst Store = new Yetanotherstore()\n\nStore.set('selectedDate', Tools.getIso8601z({onlyDate: true}))\n\nexport default Store","import React from 'react'\nimport Store from '../../core/Store'\nimport Tools from '../../core/Tools'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css'\nimport './style.css'\n\nclass SidePanel extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <div\n        className=\"side-panel\"\n      >\n        <Calendar\n          className=\"calendar\"\n          onChange={(date) => {\n            console.log(date)\n            \n            Store.set('selectedDate', Tools.getIso8601z({date: date, onlyDate: true}))\n            this.props.hideDrawer()\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default SidePanel","import React from 'react'\nimport Store from '../../core/Store'\nimport {Button, Row, Col, Divider, notification } from 'antd'\nimport MyEntryCollection from '../../core/EntryCollection'\nimport { /*monaco,*/ ControlledEditor } from '@monaco-editor/react'\nimport { QuestionCircleOutlined, CaretLeftOutlined, CaretRightOutlined } from '@ant-design/icons'\nimport './style.css'\nimport Tools from '../../core/Tools'\nimport hljs from 'highlight.js'\nimport 'highlight.js/styles/github.css'\n\n// monaco\n//   .init()\n//   .then(monaco => {/* here is the instance of monaco, so you can use the `monaco.languages` or whatever you want */})\n//   .catch(error => console.error('An error occurred during initialization of Monaco: ', error))\n\nclass CentralDisplay extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedDate: Store.get('selectedDate'),\n      editionMode: false,\n      isEditorReady: false,\n    }\n    this._htmlDivRef = React.createRef()\n    this._editText = ''\n  }\n\n\n\n\n  highlight = () => {\n    if (!this.state.editionMode && this._htmlDivRef.current) {\n      // console.log('this._htmlDivRef', this._htmlDivRef)\n      \n        const nodes = this._htmlDivRef.current.querySelectorAll('pre')\n        nodes.forEach((node) => {\n          console.log('node', node)\n          \n          hljs.highlightBlock(node)\n        })\n    }\n  }\n\n\n  componentDidMount() {\n    // pressing Escape while in edition mode will saves and quit\n    document.addEventListener('keyup', (evt) => {\n      if(this.state.editionMode && evt.key === 'Escape') {\n       this.textSave()\n      }\n    })\n\n    Store.on('set:selectedDate', (evt) => {\n      this.setState({selectedDate: evt.value})\n    })\n    this.highlight()\n  }\n\n\n  componentDidUpdate() {\n    if(this.state.editionMode) {\n      // this.refs.writeComponent.focus() \n    }\n    this.highlight()\n  }\n  \n\n  onTextUpdate = (ev, value) => {\n    this._editText = value\n  }\n\n  \n  textSave = () => {\n    MyEntryCollection.setEntry(this.state.selectedDate, this._editText)\n    this.setState({editionMode: false})\n  }\n\n\n  goEdit = () => {\n    this.setState({editionMode: true})\n\n    notification.info({\n      message: `Tips`,\n      description: 'Press Escape key to save!',\n      placement: 'bottomRight',\n    });\n  }\n\n  previousDay = (evt) => {\n    evt.preventDefault()\n    Store.set('selectedDate', Tools.getDayRelativeTo(this.state.selectedDate, -1))\n  }\n\n\n  nextDay = (evt) => {\n    evt.preventDefault()\n    Store.set('selectedDate', Tools.getDayRelativeTo(this.state.selectedDate, +1))\n  }\n\n\n  \n  render() {\n    let dateId = this.state.selectedDate\n    let entry = MyEntryCollection.getEntry(dateId)\n    this._editText = entry ? entry.text : ''\n    // let textHtml = hljs.highlightAuto(entry ? entry.html : '').value\n    let textHtml = entry ? entry.html : ''\n    \n    let dateString = (new Date(dateId)).toDateString()\n\n    let dateTitleComp = null\n\n    if (Tools.isItToday(dateId)) {\n      dateTitleComp = (\n        <div\n          className=\"date-title\"\n        >\n          <div style={{fontSize: '2em'}}>\n            Today\n          </div>\n          <div style={{\n            marginLeft: 5,\n            color: '#aaa'\n          }}>\n            {dateString}\n          </div>\n        </div>\n      )\n    } else {\n      const dayDiff = Tools.dayDeltaFromToday(dateId)\n      const absDiff = Math.abs(dayDiff)\n      const dateDiffStr = dayDiff < 0 ? `${absDiff} days ago` : `in ${absDiff} day${absDiff > 1 ? 's' : ''} from now`\n      dateTitleComp = (\n        <div\n          className=\"date-title\"\n        >\n          <div style={{fontSize: '2em'}}>\n            {dateString}\n          </div>\n          <div style={{\n            marginLeft: 5,\n            color: '#aaa'\n          }}>\n            {dateDiffStr}\n          </div>\n        </div>\n      )\n    }\n\n    let header = (\n      <Row align=\"middle\">\n        <Col span={6} style={{textAlign: 'right'}}>\n          <CaretLeftOutlined className=\"arrow-day\" onClick={this.previousDay}/>\n        </Col>\n        <Col span={12}>\n          {dateTitleComp}\n        </Col>\n        <Col span={6} style={{textAlign: 'left'}}>\n          <CaretRightOutlined className=\"arrow-day\" onClick={this.nextDay}/>\n        </Col>\n      </Row>\n    )\n\n\n    let displayDiv = null\n\n    let buttonToShow = null\n\n    if (this.state.editionMode) {\n      console.log('EDIT MODE')\n\n      buttonToShow = (\n        <Row justify=\"center\">\n          <Button type=\"primary\"  onClick={this.textSave}>Save</Button>\n        </Row>\n      )\n      \n      displayDiv = (\n          <div className=\"editor-container\">\n            <ControlledEditor\n              className=\"monaco-editor\"\n              // height=\"fit-content\"\n              language=\"markdown\"\n              theme=\"light\"\n              options={{  // all options here: https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditoroptions.html\n                fontSize: 16,\n                wordWrap: 'on',\n                minimap: {\n                  enabled: false\n                },\n                scrollbar: {\n                  useShadows: false\n                },\n                renderLineHighlight: 'none',\n                lineNumbersMinChars: 3,\n                autoClosingQuotes: \"always\"\n              }}\n              value={this._editText}\n              editorDidMount={this.handleEditorDidMount}\n              onChange={this.onTextUpdate}\n            />\n          </div>\n      )\n    } else {\n      console.log('READ MODE')\n      buttonToShow = (\n        <Row justify=\"center\">\n          <Button type=\"primary\"  onClick={this.goEdit}>Edit</Button>\n        </Row>\n      )\n\n      displayDiv = (\n        <div>\n          <Divider />\n          <div\n            ref={this._htmlDivRef}\n            dangerouslySetInnerHTML={{__html: textHtml}}\n            onDoubleClick={this.goEdit}\n          />\n          <Divider />\n        </div>\n      )\n    }\n\n\n    if (entry === null && !this.state.editionMode) {\n      buttonToShow = null\n      displayDiv = (\n        <div\n          style={{\n            height: '50vh',\n            position: 'relative'\n          }}\n        >\n\n            <div\n            style={{\n              position: 'absolute',\n              top: 0,\n              bottom: 0,\n              left: 0,\n              right: 0,\n              margin: 'auto',\n              width: 'fit-content',\n              height: 'fit-content',\n              textAlign: 'center',\n              border: 'dashed 1px #8ac7ff',\n              padding: 20\n            }}\n            >\n              <div \n                style={{\n                  \n                }}\n              >\n                <div>\n                  <QuestionCircleOutlined style={{fontSize: 50, color: '#8ac7ff'}}/>\n                </div>\n                <div style={{margin: 20}}>\n                  Nothing yet, let's write something!\n                </div>\n                <div>\n                  <Button type=\"primary\"  onClick={this.goEdit}>Write</Button>\n                </div>\n              </div>\n            </div>\n\n          \n\n        </div>\n      )\n      \n    }\n\n    return (\n      <div\n        className=\"central-display\"\n      >\n        {header}\n        {displayDiv}\n        {buttonToShow}\n      </div>\n    )\n \n  }\n\n  handleEditorDidMount = (_, editor) => {\n    this.editor = editor;\n    this.setState({\n      isEditorReady: true\n    })\n  }\n}\n\nexport default CentralDisplay","import React from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport { Layout, Row, Col, Drawer, Space } from 'antd'\nimport { MenuOutlined, GithubOutlined } from '@ant-design/icons'\nimport SidePanel from './views/SidePanel'\nimport CentralDisplay from './views/CentralDisplay'\nimport Store from './core/Store'\nimport Tools from './core/Tools'\nconst { Header, Footer, Sider, Content } = Layout\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      drawerVisible: false\n    }\n  }\n\n  showDrawer = () => {\n    this.setState({\n      drawerVisible: true,\n    })\n  }\n\n\n  hideDrawer = () => {\n    this.setState({\n      drawerVisible: false,\n    })\n  }\n  \n\n  backOnToday = () => {\n    Store.set('selectedDate', Tools.getIso8601z({onlyDate: true}))\n  }\n\n  render() {\n    let drawerVisible = false\n\n    const logo = (\n      <span\n        className=\"today-logo\"\n      >\n        <span style={{fontWeight: 600, marginRight: '0.25em'}}>today</span> \n        <span style={{fontWeight: 300}}>today</span>\n      </span>\n    )\n\n    let footer = (\n      <span>Made by <a href=\"https://twitter.com/jonathanlurie\">@jonathanlurie</a>. Fork it on <a href=\"https://github.com/jonathanlurie/todaytoday\">GitHub</a>.</span>\n    )\n\n    return (\n      <Layout style={{background: '#fff'}}>\n\n        <Header\n          style={{\n            background: 'white'\n          }}\n        >\n          <Space size=\"middle\">\n            <MenuOutlined onClick={this.showDrawer}/>\n            <div onClick={this.backOnToday}>{logo}</div>\n          </Space>\n        </Header>\n        \n        <Row>\n          <Col xs={2}  sm={2}  md={4}  lg={4} xl={6}>\n            \n          </Col>\n          <Col xs={20} sm={20} md={16} lg={16} xl={12}>\n            <Content>\n              <CentralDisplay/>\n            </Content>\n          </Col>\n          <Col xs={2}  sm={2}  md={4}  lg={4} xl={6}>\n            \n          </Col>\n        </Row>\n        \n        {/* <Footer>Footer</Footer> */}\n        <Drawer\n          title={logo}\n          placement=\"left\"\n          closable={false}\n          onClose={this.hideDrawer}\n          visible={this.state.drawerVisible}\n          width={350}\n          footer={footer}\n        >\n          <SidePanel hideDrawer={this.hideDrawer}/>\n        </Drawer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\nimport './index.css'\nimport MyEntryCollection from './core/EntryCollection'\nimport App from './App'\n\n// import * as serviceWorker from './serviceWorker'\n\n\n\n\n(async () => {\n\n  // loads data from ImmortalDB\n  await MyEntryCollection.load()\n\n  ReactDOM.render(\n    // <React.StrictMode>\n      <App />\n    // </React.StrictMode>\n    ,\n    document.getElementById('root')\n  );\n})()\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}