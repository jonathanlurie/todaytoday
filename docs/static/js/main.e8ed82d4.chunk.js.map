{"version":3,"sources":["core/Entry.js","core/Tools.js","core/EntryCollection.js","core/Store.js","views/SidePanel/index.js","views/CentralDisplay/index.js","App.js","index.js"],"names":["Entry","dateId","text","this","_dateId","_text","trim","t","DOMPurify","sanitize","Marked","Tools","options","date","Date","onlyDate","timeSeparator","withTimezone","timezoneOffsetMin","getTimezoneOffset","offsetHours","parseInt","Math","abs","offsetMinutes","timezoneStandard","currentDate","getDate","currentMonth","getMonth","currentYear","getFullYear","currentHours","getHours","currentMinutes","getMinutes","currentSeconds","getSeconds","currentDatetime","day","getIso8601z","slice","today","delta","refDay","setDate","filename","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","MyEntryCollection","_collection","simplified","Object","keys","forEach","JSON","stringify","jsonSnapshot","exportJsonSnapshot","downloadJSON","ImmortalDB","get","dateListIds","parse","i","length","setEntry","set","trimmedText","updateIndexImmortal","updateImmortalIndex","deleteEntry","detaId","remove","then","a","console","log","catch","err","Store","Yetanotherstore","SidePanel","props","dlSnapshot","EntryCollection","downloadSnapshot","state","className","onChange","hideDrawer","type","icon","DownloadOutlined","size","onClick","React","Component","CentralDisplay","highlight","editionMode","_htmlDivRef","current","querySelectorAll","node","hljs","highlightBlock","onTextUpdate","ev","value","_editText","textSave","selectedDate","setState","goEdit","notification","info","message","description","placement","previousDay","evt","preventDefault","getDayRelativeTo","nextDay","handleEditorDidMount","_","editor","isEditorReady","createRef","addEventListener","key","on","entry","getEntry","textHtml","html","dateString","toDateString","dateTitleComp","isItToday","fontSize","marginLeft","color","dayDiff","dayDeltaFromToday","absDiff","dateDiffStr","header","align","span","textAlign","title","CaretLeftOutlined","CaretRightOutlined","displayDiv","buttonToShow","justify","language","theme","wordWrap","minimap","enabled","scrollbar","useShadows","renderLineHighlight","lineNumbersMinChars","autoClosingQuotes","editorDidMount","destroyTooltipOnHide","ref","dangerouslySetInnerHTML","__html","onDoubleClick","height","position","top","bottom","left","right","margin","width","border","padding","QuestionCircleOutlined","Header","Layout","Content","Footer","Sider","e","window","navigator","platform","match","metaKey","ctrlKey","keyCode","App","showDrawer","drawerVisible","backOnToday","logo","fontWeight","marginRight","footer","href","background","MenuOutlined","xs","sm","md","lg","xl","closable","onClose","visible","load","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e8ed82d4.chunk.js","sourcesContent":["import Marked from 'marked'\nimport DOMPurify from 'dompurify'\n\nclass Entry {\n  constructor(dateId, text) {\n    this._dateId = dateId\n    this._text = text.trim()\n  }\n\n  get dateId() {\n    return this._dateId\n  }\n\n  get text() {\n    return this._text\n  }\n\n  set text(t) {\n    this._text = t\n  }\n\n  get html() {\n    return DOMPurify.sanitize(Marked(this._text))\n  }\n}\n\nexport default Entry","class Tools {\n\n  static getIso8601z(options = {}) {\n    const date = 'date' in options ? options.date : new Date()\n    const onlyDate = 'onlyDate' in options ? options.onlyDate : false\n    const timeSeparator = 'timeSeparator' in options ? options.timeSeparator : ':'\n    const withTimezone = 'withTimezone' in options ? options.withTimezone : true\n\n    // timezone part\n    const timezoneOffsetMin = date.getTimezoneOffset()\n    let offsetHours = parseInt(Math.abs(timezoneOffsetMin / 60))\n    let offsetMinutes = Math.abs(timezoneOffsetMin % 60)\n    let timezoneStandard = null\n  \n    if(offsetHours < 10) {\n      offsetHours = `0${offsetHours}`\n    }\n  \n    if(offsetMinutes < 10) {\n      offsetMinutes = `0${offsetMinutes}`\n    }\n  \n    // Add an opposite sign to the offset\n    // If offset is 0, it means timezone is UTC\n    if(timezoneOffsetMin < 0) {\n      timezoneStandard = `+${offsetHours}:${offsetMinutes}`\n    } else if(timezoneOffsetMin > 0) {\n      timezoneStandard = `-${offsetHours}:${offsetMinutes}`\n    } else if(timezoneOffsetMin === 0) {\n      timezoneStandard = 'Z'\n    }\n  \n    // date part\n    let currentDate = date.getDate()\n    let currentMonth = date.getMonth() + 1\n    let currentYear = date.getFullYear()\n    let currentHours = date.getHours()\n    let currentMinutes = date.getMinutes()\n    let currentSeconds = date.getSeconds()\n    let currentDatetime = null\n  \n    // Add 0 before date, month, hrs, mins or secs if they are less than 0\n    currentDate = currentDate < 10 ? `0${currentDate}` : currentDate;\n    currentMonth = currentMonth < 10 ? `0${currentMonth}` : currentMonth;\n    currentHours = currentHours < 10 ? `0${currentHours}` : currentHours;\n    currentMinutes = currentMinutes < 10 ? `0${currentMinutes}` : currentMinutes;\n    currentSeconds = currentSeconds < 10 ? `0${currentSeconds}` : currentSeconds;\n  \n    // Current datetime\n    // String such as 2016-07-16T19:20:30\n    currentDatetime = `${currentYear}-${currentMonth}-${currentDate}T${currentHours}${timeSeparator}${currentMinutes}${timeSeparator}${currentSeconds}`\n  \n    if (onlyDate) {\n      return `${currentYear}-${currentMonth}-${currentDate}`\n    }\n\n    if (!withTimezone) {\n      return currentDatetime\n    }\n    \n    return `${currentDatetime}${timezoneStandard}`\n  }\n\n\n  static isItToday(day) {\n    let today = Tools.getIso8601z({onlyDate: true})\n    return today === day.slice(0, 10)\n  }\n\n\n  static dayDeltaFromToday(day) {\n    const today = new Date(Tools.getIso8601z({onlyDate: true}))\n    const theOtherDay = new Date(day)\n\n    let diff = (theOtherDay - today) / (1000 * 3600 * 24)\n    return diff\n  }\n\n\n  static getDayRelativeTo(day, delta) {\n    const refDay = new Date(day)\n    refDay.setDate(refDay.getDate() + delta)\n    return Tools.getIso8601z({date: refDay, onlyDate: true})\n  }\n\n\n  // borrowed from\n  // https://stackoverflow.com/questions/3665115/how-to-create-a-file-in-memory-for-user-to-download-but-not-through-server\n  static downloadJSON(filename, text) {\n    const element = document.createElement('a')\n    element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(text))\n    element.setAttribute('download', filename)\n    element.style.display = 'none'\n    document.body.appendChild(element)\n    element.click()\n    document.body.removeChild(element)\n  }\n\n}\n\nexport default Tools","import Entry from './Entry'\nimport Tools from './Tools'\nimport { ImmortalDB } from 'immortal-db'\n\nconst TODAY_DATE_ID_LIST = 'today_dateIdList'\n\nclass EntryCollection {\n  constructor() {\n    this._collection = {}\n  }\n\n\n  exportJsonSnapshot() {\n    const simplified = {}\n    Object.keys(this._collection).forEach((dateId) => {\n      simplified[dateId] = this._collection[dateId].text\n    })\n    return JSON.stringify(simplified)\n  }\n\n\n  downloadSnapshot() {\n    const jsonSnapshot = this.exportJsonSnapshot()\n    const filename = `todatoday_snapshot_${Tools.getIso8601z({timeSeparator: '-', withTimezone: false})}.json`\n    Tools.downloadJSON(filename, jsonSnapshot)\n  }\n\n  /**\n   * Fetch data from ImmortalDB\n   */\n  async load() {\n    let dateListIds = await ImmortalDB.get(TODAY_DATE_ID_LIST, null)\n\n    if (dateListIds === null) {\n      return\n    }\n\n    // the list in ImmortalDB is a JSON string\n    dateListIds = JSON.parse(dateListIds)\n\n    for (let i = 0; i < dateListIds.length; i += 1) {\n      let dateId = dateListIds[i]\n      let text = await ImmortalDB.get(dateListIds[i])\n      this.setEntry(dateId, text)\n    }\n  }\n\n\n  async updateImmortalIndex() {\n    await ImmortalDB.set(TODAY_DATE_ID_LIST, JSON.stringify(Object.keys(this._collection)))\n  }\n\n\n  setEntry(dateId, text) {\n    const trimmedText = text.trim()\n\n    // we dont keep blank\n    if (trimmedText.length === 0) {\n      this.deleteEntry(dateId)\n      return\n    }\n\n    let updateIndexImmortal = false\n    // if the dateId was not in the collection, then we need to update the list of ids in immortalDB\n    if (!(dateId in this._collection)) {\n      updateIndexImmortal = true\n    }\n\n    this._collection[dateId] = new Entry(dateId, trimmedText)\n\n    // updating ImmortalDB\n    ImmortalDB.set(dateId, trimmedText)\n\n    if (updateIndexImmortal) {\n      this.updateImmortalIndex()\n    }\n  }\n\n\n  getEntry(dateId) {\n    if (dateId in this._collection) {\n      return this._collection[dateId]\n    } else {\n      return null\n    }\n  }\n\n\n  hasEntry(detaId) {\n    return detaId in this._collection\n  }\n\n\n  deleteEntry(dateId) {\n    if (dateId in this._collection) {\n      delete this._collection[dateId]\n      ImmortalDB.remove(dateId)\n      .then((a) => console.log(a))\n      .catch((err) => console.log('err', err))\n    }\n    this.updateImmortalIndex()\n  }\n}\n\nconst MyEntryCollection = new EntryCollection()\n\nexport default MyEntryCollection","import Yetanotherstore from 'yetanotherstore'\nimport Tools from './Tools'\n\nconst Store = new Yetanotherstore()\n\nStore.set('selectedDate', Tools.getIso8601z({onlyDate: true}))\n\nexport default Store","import React from 'react'\nimport { Divider, Button } from 'antd'\nimport { DownloadOutlined } from '@ant-design/icons'\nimport Store from '../../core/Store'\nimport EntryCollection from '../../core/EntryCollection'\nimport Tools from '../../core/Tools'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css'\nimport './style.css'\n\nclass SidePanel extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n\n  dlSnapshot = () => {\n    EntryCollection.downloadSnapshot()\n  }\n\n  render() {\n    return (\n      <div\n        className=\"side-panel\"\n      >\n        <Calendar\n          className=\"calendar\"\n          onChange={(date) => {\n            console.log(date)\n            \n            Store.set('selectedDate', Tools.getIso8601z({date: date, onlyDate: true}))\n            this.props.hideDrawer()\n          }}\n        />\n        \n        <Divider />\n        <Button className=\"wide-button\" type=\"primary\" icon={<DownloadOutlined />} size=\"large\" onClick={this.dlSnapshot}>Export snapshot</Button>\n        \n      </div>\n    )\n  }\n}\n\nexport default SidePanel","import React from 'react'\nimport Store from '../../core/Store'\nimport {Button, Row, Col, Divider, notification, Tooltip } from 'antd'\nimport MyEntryCollection from '../../core/EntryCollection'\nimport { /*monaco,*/ ControlledEditor } from '@monaco-editor/react'\nimport { QuestionCircleOutlined, CaretLeftOutlined, CaretRightOutlined } from '@ant-design/icons'\nimport './style.css'\nimport Tools from '../../core/Tools'\nimport hljs from 'highlight.js'\nimport 'highlight.js/styles/github.css'\n\n// monaco\n//   .init()\n//   .then(monaco => {/* here is the instance of monaco, so you can use the `monaco.languages` or whatever you want */})\n//   .catch(error => console.error('An error occurred during initialization of Monaco: ', error))\n\nclass CentralDisplay extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedDate: Store.get('selectedDate'),\n      editionMode: false,\n      isEditorReady: false,\n    }\n    this._htmlDivRef = React.createRef()\n    this._editText = ''\n  }\n\n\n\n\n  highlight = () => {\n    if (!this.state.editionMode && this._htmlDivRef.current) {\n      // console.log('this._htmlDivRef', this._htmlDivRef)\n      \n        const nodes = this._htmlDivRef.current.querySelectorAll('pre')\n        nodes.forEach((node) => {\n          console.log('node', node)\n          \n          hljs.highlightBlock(node)\n        })\n    }\n  }\n\n\n  componentDidMount() {\n    // pressing Escape while in edition mode will saves and quit\n    document.addEventListener('keyup', (evt) => {\n      if(this.state.editionMode && evt.key === 'Escape') {\n       this.textSave()\n      }\n\n      if(!this.state.editionMode && evt.key === 'Enter') {\n        this.goEdit()\n      }\n\n      if(evt.key === 'ArrowLeft') {\n        this.previousDay(evt)\n      }\n\n      if(evt.key === 'ArrowRight') {\n        this.nextDay(evt)\n      }\n\n      console.log(evt)\n      \n      \n    })\n\n    Store.on('set:selectedDate', (evt) => {\n      this.setState({selectedDate: evt.value})\n    })\n    this.highlight()\n  }\n\n\n  componentDidUpdate() {\n    if(this.state.editionMode) {\n      // this.refs.writeComponent.focus() \n    }\n    this.highlight()\n  }\n  \n\n  onTextUpdate = (ev, value) => {\n    this._editText = value\n  }\n\n  \n  textSave = () => {\n    MyEntryCollection.setEntry(this.state.selectedDate, this._editText)\n    this.setState({editionMode: false})\n  }\n\n\n  goEdit = () => {\n    this.setState({editionMode: true})\n\n    notification.info({\n      message: `Tips`,\n      description: 'Press Escape key to save!',\n      placement: 'bottomRight',\n    });\n  }\n\n  previousDay = (evt) => {\n    evt.preventDefault()\n    Store.set('selectedDate', Tools.getDayRelativeTo(this.state.selectedDate, -1))\n  }\n\n\n  nextDay = (evt) => {\n    evt.preventDefault()\n    Store.set('selectedDate', Tools.getDayRelativeTo(this.state.selectedDate, +1))\n  }\n\n\n  \n  render() {\n    let dateId = this.state.selectedDate\n    let entry = MyEntryCollection.getEntry(dateId)\n    this._editText = entry ? entry.text : ''\n    // let textHtml = hljs.highlightAuto(entry ? entry.html : '').value\n    let textHtml = entry ? entry.html : ''\n    \n    let dateString = (new Date(dateId)).toDateString()\n\n    let dateTitleComp = null\n\n    if (Tools.isItToday(dateId)) {\n      dateTitleComp = (\n        <div\n          className=\"date-title\"\n        >\n          <div style={{fontSize: '2em'}}>\n            Today\n          </div>\n          <div style={{\n            marginLeft: 5,\n            color: '#aaa'\n          }}>\n            {dateString}\n          </div>\n        </div>\n      )\n    } else {\n      const dayDiff = Tools.dayDeltaFromToday(dateId)\n      const absDiff = Math.abs(dayDiff)\n      const dateDiffStr = dayDiff < 0 ? `${absDiff} days ago` : `in ${absDiff} day${absDiff > 1 ? 's' : ''} from now`\n      dateTitleComp = (\n        <div\n          className=\"date-title\"\n        >\n          <div style={{fontSize: '2em'}}>\n            {dateString}\n          </div>\n          <div style={{\n            marginLeft: 5,\n            color: '#aaa'\n          }}>\n            {dateDiffStr}\n          </div>\n        </div>\n      )\n    }\n\n    let header = (\n      <Row align=\"middle\">\n        <Col span={6} style={{textAlign: 'right'}}>\n          <Tooltip placement=\"left\" title=\"Keyboard left key ⚡\">\n            <CaretLeftOutlined className=\"arrow-day\" onClick={this.previousDay}/>\n          </Tooltip>\n        </Col>\n        <Col span={12}>\n          {dateTitleComp}\n        </Col>\n        <Col span={6} style={{textAlign: 'left'}}>\n          <Tooltip placement=\"right\" title=\"Keyboard right key ⚡\">\n            <CaretRightOutlined className=\"arrow-day\" onClick={this.nextDay}/>\n          </Tooltip>\n        </Col>\n      </Row>\n    )\n\n\n    let displayDiv = null\n\n    let buttonToShow = null\n\n    if (this.state.editionMode) {\n      console.log('EDIT MODE')\n\n      buttonToShow = (\n        <Row justify=\"center\">\n          <Button type=\"primary\"  onClick={this.textSave}>Save</Button>\n        </Row>\n      )\n      \n      displayDiv = (\n          <div className=\"editor-container\">\n            <ControlledEditor\n              className=\"monaco-editor\"\n              // height=\"fit-content\"\n              language=\"markdown\"\n              theme=\"light\"\n              options={{  // all options here: https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditoroptions.html\n                fontSize: 16,\n                wordWrap: 'on',\n                minimap: {\n                  enabled: false\n                },\n                scrollbar: {\n                  useShadows: false\n                },\n                renderLineHighlight: 'none',\n                lineNumbersMinChars: 3,\n                autoClosingQuotes: \"always\"\n              }}\n              value={this._editText}\n              editorDidMount={this.handleEditorDidMount}\n              onChange={this.onTextUpdate}\n            />\n          </div>\n      )\n    } else {\n      console.log('READ MODE')\n      buttonToShow = (\n        <Row justify=\"center\">\n          <Button type=\"primary\"  onClick={this.goEdit}>Edit</Button>\n        </Row>\n      )\n\n      displayDiv = (\n        <div>\n          <Divider />\n          <Tooltip placement=\"left\" title=\"Double click to edit ⚡\" destroyTooltipOnHide={true}>\n            <div\n              ref={this._htmlDivRef}\n              dangerouslySetInnerHTML={{__html: textHtml}}\n              onDoubleClick={this.goEdit}\n            />\n          </Tooltip>\n          <Divider />\n        </div>\n      )\n    }\n\n\n    if (entry === null && !this.state.editionMode) {\n      buttonToShow = null\n      displayDiv = (\n        <div\n          style={{\n            height: '50vh',\n            position: 'relative'\n          }}\n        >\n\n            <div\n            style={{\n              position: 'absolute',\n              top: 0,\n              bottom: 0,\n              left: 0,\n              right: 0,\n              margin: 'auto',\n              width: 'fit-content',\n              height: 'fit-content',\n              textAlign: 'center',\n              border: 'dashed 1px #8ac7ff',\n              padding: 20\n            }}\n            >\n              <div \n                style={{\n                  \n                }}\n              >\n                <div>\n                  <QuestionCircleOutlined style={{fontSize: 50, color: '#8ac7ff'}}/>\n                </div>\n                <div style={{margin: 20}}>\n                  Nothing yet, let's write something!\n                </div>\n                <div>\n                  <Button type=\"primary\"  onClick={this.goEdit}>Write</Button>\n                </div>\n              </div>\n            </div>\n\n          \n\n        </div>\n      )\n      \n    }\n\n    return (\n      <div\n        className=\"central-display\"\n      >\n        {header}\n        {displayDiv}\n        {buttonToShow}\n      </div>\n    )\n \n  }\n\n  handleEditorDidMount = (_, editor) => {\n    this.editor = editor;\n    this.setState({\n      isEditorReady: true\n    })\n  }\n}\n\nexport default CentralDisplay","import React from 'react'\nimport './App.css'\nimport { Layout, Row, Col, Drawer, Space } from 'antd'\nimport { MenuOutlined, GithubOutlined } from '@ant-design/icons'\nimport SidePanel from './views/SidePanel'\nimport CentralDisplay from './views/CentralDisplay'\nimport Store from './core/Store'\nimport Tools from './core/Tools'\nimport EntryCollection from './core/EntryCollection'\nconst { Header, Footer, Sider, Content } = Layout\n\n// press cmd + s to download a snapshot\ndocument.addEventListener(\"keydown\", function(e) {\n  if ((window.navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey)  && e.keyCode == 83) {\n    e.preventDefault()\n    EntryCollection.downloadSnapshot()\n  }\n}, false)\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      drawerVisible: false\n    }\n  }\n\n  showDrawer = () => {\n    this.setState({\n      drawerVisible: true,\n    })\n  }\n\n\n  hideDrawer = () => {\n    this.setState({\n      drawerVisible: false,\n    })\n  }\n  \n\n  backOnToday = () => {\n    Store.set('selectedDate', Tools.getIso8601z({onlyDate: true}))\n  }\n\n  render() {\n    let drawerVisible = false\n\n    const logo = (\n      <span\n        className=\"today-logo\"\n      >\n        <span style={{fontWeight: 600, marginRight: '0.25em'}}>today</span> \n        <span style={{fontWeight: 300}}>today</span>\n      </span>\n    )\n\n    let footer = (\n      <span>Made by <a href=\"https://twitter.com/jonathanlurie\">@jonathanlurie</a>. Fork it on <a href=\"https://github.com/jonathanlurie/todaytoday\">GitHub</a>.</span>\n    )\n\n    return (\n      <Layout style={{background: '#fff'}}>\n\n        <Header\n          style={{\n            background: 'white'\n          }}\n        >\n          <Space size=\"middle\">\n            <MenuOutlined onClick={this.showDrawer}/>\n            <div onClick={this.backOnToday}>{logo}</div>\n          </Space>\n        </Header>\n        \n        <Row>\n          <Col xs={2}  sm={2}  md={4}  lg={4} xl={6}>\n            \n          </Col>\n          <Col xs={20} sm={20} md={16} lg={16} xl={12}>\n            <Content>\n              <CentralDisplay/>\n            </Content>\n          </Col>\n          <Col xs={2}  sm={2}  md={4}  lg={4} xl={6}>\n            \n          </Col>\n        </Row>\n        \n        {/* <Footer>Footer</Footer> */}\n        <Drawer\n          title={logo}\n          placement=\"left\"\n          closable={false}\n          onClose={this.hideDrawer}\n          visible={this.state.drawerVisible}\n          width={350}\n          footer={footer}\n        >\n          <SidePanel hideDrawer={this.hideDrawer}/>\n        </Drawer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\nimport './index.css'\nimport MyEntryCollection from './core/EntryCollection'\nimport App from './App'\n\n// import * as serviceWorker from './serviceWorker'\n\n\n\n\n(async () => {\n\n  // loads data from ImmortalDB\n  await MyEntryCollection.load()\n\n  ReactDOM.render(\n    // <React.StrictMode>\n      <App />\n    // </React.StrictMode>\n    ,\n    document.getElementById('root')\n  );\n})()\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}